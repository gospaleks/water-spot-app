<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/rs/gospaleks/waterspot/presentation/screens/map/components/SpotDetailsBottomSheet.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/rs/gospaleks/waterspot/presentation/screens/map/components/SpotDetailsBottomSheet.kt" />
              <option name="originalContent" value="package rs.gospaleks.waterspot.presentation.screens.map.components&#10;&#10;import androidx.compose.foundation.layout.*&#10;import androidx.compose.foundation.shape.CircleShape&#10;import androidx.compose.foundation.shape.RoundedCornerShape&#10;import androidx.compose.material.icons.Icons&#10;import androidx.compose.material.icons.automirrored.filled.ArrowForward&#10;import androidx.compose.material.icons.filled.Navigation&#10;import androidx.compose.material.icons.outlined.Report&#10;import androidx.compose.material3.*&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.runtime.LaunchedEffect&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.draw.clip&#10;import androidx.compose.ui.layout.ContentScale&#10;import androidx.compose.ui.res.stringResource&#10;import androidx.compose.ui.unit.dp&#10;import coil.compose.AsyncImage&#10;import kotlinx.coroutines.delay&#10;import rs.gospaleks.waterspot.domain.model.SpotDetails&#10;import rs.gospaleks.waterspot.presentation.components.toDisplayName&#10;import rs.gospaleks.waterspot.presentation.components.icon&#10;import rs.gospaleks.waterspot.domain.model.User&#10;import rs.gospaleks.waterspot.presentation.components.CleanlinessChip&#10;import rs.gospaleks.waterspot.R&#10;&#10;@OptIn(ExperimentalMaterial3Api::class)&#10;@Composable&#10;fun SpotDetailsBottomSheet(&#10;    spotDetails: SpotDetails? = null,&#10;    isLoading: Boolean,&#10;    selectedSpotId: String? = null,&#10;    onDismiss: () -&gt; Unit,&#10;    onReviewClick: () -&gt; Unit,&#10;    onNavigateClick: () -&gt; Unit,&#10;    onLoadSpotDetails: (String) -&gt; Unit = {},&#10;    onUserProfileClick: () -&gt; Unit = {}&#10;) {&#10;    LaunchedEffect(selectedSpotId) {&#10;        selectedSpotId?.let { spotId -&gt;&#10;            // Mala pauza da se animacija otvaranja zavrÅ¡i&#10;            delay(200)&#10;            onLoadSpotDetails(spotId)&#10;        }&#10;    }&#10;&#10;    ModalBottomSheet(&#10;        onDismissRequest = onDismiss,&#10;    ) {&#10;        Column(&#10;            modifier = Modifier.fillMaxWidth()&#10;        ) {&#10;            if (isLoading || spotDetails == null) {&#10;                Box(&#10;                    modifier = Modifier&#10;                        .fillMaxHeight(0.5f)&#10;                        .fillMaxWidth(),&#10;                    contentAlignment = Alignment.Center,&#10;                ) {&#10;                    CircularProgressIndicator()&#10;                }&#10;            } else {&#10;                SpotDetailsContent(&#10;                    spotDetails = spotDetails,&#10;                    onNavigateClick = onNavigateClick,&#10;                    onReviewClick = onReviewClick,&#10;                    onUserProfileClick = onUserProfileClick&#10;                )&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun SpotDetailsContent(&#10;    spotDetails: SpotDetails,&#10;    onReviewClick: () -&gt; Unit = {},&#10;    onNavigateClick: () -&gt; Unit = {},&#10;    onUserProfileClick: () -&gt; Unit = {}&#10;) {&#10;    Column(&#10;        modifier = Modifier&#10;            .fillMaxWidth()&#10;            .padding(16.dp)&#10;    ) {&#10;        // Photo&#10;        spotDetails.spot.photoUrl?.let { photoUrl -&gt;&#10;            AsyncImage(&#10;                model = photoUrl,&#10;                contentDescription = null,&#10;                modifier = Modifier&#10;                    .fillMaxWidth()&#10;                    .aspectRatio(4f / 3f)&#10;                    .clip(RoundedCornerShape(16.dp)),&#10;                contentScale = ContentScale.Crop&#10;            )&#10;&#10;            Spacer(modifier = Modifier.height(16.dp))&#10;        }&#10;&#10;        // Header with type and date&#10;        Row(&#10;            modifier = Modifier.fillMaxWidth(),&#10;            horizontalArrangement = Arrangement.SpaceBetween,&#10;            verticalAlignment = Alignment.CenterVertically&#10;        ) {&#10;            // Type with icon&#10;            Row(&#10;                verticalAlignment = Alignment.CenterVertically,&#10;                modifier = Modifier.weight(1f)&#10;            ) {&#10;                Icon(&#10;                    imageVector = spotDetails.spot.type.icon(),&#10;                    contentDescription = null,&#10;                    tint = MaterialTheme.colorScheme.primary,&#10;                    modifier = Modifier.size(24.dp)&#10;                )&#10;                Spacer(modifier = Modifier.width(8.dp))&#10;                Text(&#10;                    text = spotDetails.spot.type.toDisplayName(),&#10;                    style = MaterialTheme.typography.headlineSmall,&#10;                    color = MaterialTheme.colorScheme.onSurface&#10;                )&#10;            }&#10;&#10;            // Cleanliness chip&#10;            CleanlinessChip(&#10;                cleanliness = spotDetails.spot.cleanliness,&#10;                modifier = Modifier.wrapContentWidth()&#10;            )&#10;        }&#10;&#10;        // Description&#10;        spotDetails.spot.description?.let { description -&gt;&#10;            Spacer(modifier = Modifier.height(12.dp))&#10;&#10;            Text(&#10;                text = description,&#10;                modifier = Modifier.fillMaxWidth().padding(16.dp),&#10;                style = MaterialTheme.typography.bodyMedium,&#10;                color = MaterialTheme.colorScheme.onSurface&#10;            )&#10;        }&#10;&#10;        // Clickable user info&#10;        spotDetails.user?.let { user -&gt;&#10;            PostedByCard(user, onUserProfileClick)&#10;        }&#10;&#10;        Spacer(modifier = Modifier.height(20.dp))&#10;&#10;        // Action buttons&#10;        ActionsButtons(&#10;            onNavigateClick = onNavigateClick,&#10;            onReviewClick = onReviewClick&#10;        )&#10;    }&#10;}&#10;&#10;@Composable&#10;fun PostedByCard(&#10;    user: User,&#10;    onUserProfileClick: () -&gt; Unit,&#10;) {&#10;    Spacer(modifier = Modifier.height(16.dp))&#10;&#10;    Card(&#10;        onClick = onUserProfileClick,&#10;        colors = CardDefaults.cardColors(&#10;            containerColor = MaterialTheme.colorScheme.surfaceContainer&#10;        ),&#10;        modifier = Modifier.fillMaxWidth()&#10;    ) {&#10;        Row(&#10;            verticalAlignment = Alignment.CenterVertically,&#10;            modifier = Modifier.padding(12.dp)&#10;        ) {&#10;            AsyncImage(&#10;                model = user.profilePictureUrl,&#10;                contentDescription = &quot;Profile picture&quot;,&#10;                modifier = Modifier&#10;                    .size(48.dp)&#10;                    .clip(CircleShape),&#10;                contentScale = ContentScale.Crop&#10;            )&#10;            Spacer(modifier = Modifier.width(12.dp))&#10;            Column {&#10;                Text(&#10;                    text = stringResource(R.string.spot_details_posted_by),&#10;                    style = MaterialTheme.typography.labelSmall,&#10;                    color = MaterialTheme.colorScheme.onSurfaceVariant&#10;                )&#10;                Text(&#10;                    text = user.fullName,&#10;                    style = MaterialTheme.typography.bodyMedium,&#10;                    color = MaterialTheme.colorScheme.onSurface&#10;                )&#10;            }&#10;            Spacer(modifier = Modifier.weight(1f))&#10;            Icon(&#10;                imageVector = Icons.AutoMirrored.Filled.ArrowForward,&#10;                contentDescription = null,&#10;                tint = MaterialTheme.colorScheme.onSurfaceVariant,&#10;                modifier = Modifier.size(20.dp)&#10;            )&#10;        }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun ActionsButtons(&#10;    onNavigateClick: () -&gt; Unit,&#10;    onReviewClick: () -&gt; Unit,&#10;) {&#10;    Row(&#10;        horizontalArrangement = Arrangement.spacedBy(12.dp),&#10;        modifier = Modifier.fillMaxWidth()&#10;    ) {&#10;        Button(&#10;            onClick = onNavigateClick,&#10;            modifier = Modifier.weight(1f),&#10;            contentPadding = PaddingValues(vertical = 12.dp)&#10;        ) {&#10;            Icon(&#10;                imageVector = Icons.Default.Navigation,&#10;                contentDescription = null,&#10;                modifier = Modifier.size(18.dp)&#10;            )&#10;            Spacer(modifier = Modifier.width(8.dp))&#10;            Text(text = stringResource(R.string.spot_details_navigate_button))&#10;        }&#10;&#10;        OutlinedButton(&#10;            onClick = onReviewClick,&#10;            modifier = Modifier.weight(1f),&#10;            contentPadding = PaddingValues(vertical = 12.dp)&#10;        ) {&#10;            Icon(&#10;                imageVector = Icons.Outlined.Report,&#10;                contentDescription = null,&#10;                modifier = Modifier.size(18.dp)&#10;            )&#10;            Spacer(modifier = Modifier.width(8.dp))&#10;            Text(text = stringResource(R.string.spot_details_review_button))&#10;        }&#10;    }&#10;}" />
              <option name="updatedContent" value="package rs.gospaleks.waterspot.presentation.screens.map.components&#10;&#10;import androidx.compose.foundation.layout.*&#10;import androidx.compose.foundation.shape.CircleShape&#10;import androidx.compose.foundation.shape.RoundedCornerShape&#10;import androidx.compose.material.icons.Icons&#10;import androidx.compose.material.icons.automirrored.filled.ArrowForward&#10;import androidx.compose.material.icons.filled.Navigation&#10;import androidx.compose.material.icons.outlined.Report&#10;import androidx.compose.material3.*&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.runtime.LaunchedEffect&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.draw.clip&#10;import androidx.compose.ui.layout.ContentScale&#10;import androidx.compose.ui.res.stringResource&#10;import androidx.compose.ui.unit.dp&#10;import coil.compose.AsyncImage&#10;import kotlinx.coroutines.delay&#10;import rs.gospaleks.waterspot.domain.model.SpotDetails&#10;import rs.gospaleks.waterspot.presentation.components.toDisplayName&#10;import rs.gospaleks.waterspot.presentation.components.icon&#10;import rs.gospaleks.waterspot.domain.model.User&#10;import rs.gospaleks.waterspot.presentation.components.CleanlinessChip&#10;import rs.gospaleks.waterspot.R&#10;&#10;@OptIn(ExperimentalMaterial3Api::class)&#10;@Composable&#10;fun SpotDetailsBottomSheet(&#10;    spotDetails: SpotDetails? = null,&#10;    isLoading: Boolean,&#10;    selectedSpotId: String? = null,&#10;    onDismiss: () -&gt; Unit,&#10;    onReviewClick: () -&gt; Unit,&#10;    onNavigateClick: () -&gt; Unit,&#10;    onLoadSpotDetails: (String) -&gt; Unit = {},&#10;    onUserProfileClick: () -&gt; Unit = {}&#10;) {&#10;    LaunchedEffect(selectedSpotId) {&#10;        selectedSpotId?.let { spotId -&gt;&#10;            // Mala pauza da se animacija otvaranja zavrÅ¡i&#10;            delay(200)&#10;            onLoadSpotDetails(spotId)&#10;        }&#10;    }&#10;&#10;    ModalBottomSheet(&#10;        onDismissRequest = onDismiss,&#10;    ) {&#10;        Column(&#10;            modifier = Modifier.fillMaxWidth()&#10;        ) {&#10;            if (isLoading || spotDetails == null) {&#10;                Box(&#10;                    modifier = Modifier&#10;                        .fillMaxHeight(0.5f)&#10;                        .fillMaxWidth(),&#10;                    contentAlignment = Alignment.Center,&#10;                ) {&#10;                    CircularProgressIndicator()&#10;                }&#10;            } else {&#10;                SpotDetailsContent(&#10;                    spotDetails = spotDetails,&#10;                    onNavigateClick = onNavigateClick,&#10;                    onReviewClick = onReviewClick,&#10;                    onUserProfileClick = onUserProfileClick&#10;                )&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun SpotDetailsContent(&#10;    spotDetails: SpotDetails,&#10;    onReviewClick: () -&gt; Unit = {},&#10;    onNavigateClick: () -&gt; Unit = {},&#10;    onUserProfileClick: () -&gt; Unit = {}&#10;) {&#10;    Column(&#10;        modifier = Modifier&#10;            .fillMaxWidth()&#10;            .padding(16.dp)&#10;    ) {&#10;        // Photo&#10;        spotDetails.spot.photoUrl?.let { photoUrl -&gt;&#10;            AsyncImage(&#10;                model = photoUrl,&#10;                contentDescription = null,&#10;                modifier = Modifier&#10;                    .fillMaxWidth()&#10;                    .aspectRatio(4f / 3f)&#10;                    .clip(RoundedCornerShape(16.dp)),&#10;                contentScale = ContentScale.Crop&#10;            )&#10;&#10;            Spacer(modifier = Modifier.height(16.dp))&#10;        }&#10;&#10;        // Header with type and date&#10;        Row(&#10;            modifier = Modifier.fillMaxWidth(),&#10;            horizontalArrangement = Arrangement.SpaceBetween,&#10;            verticalAlignment = Alignment.CenterVertically&#10;        ) {&#10;            // Type with icon&#10;            Row(&#10;                verticalAlignment = Alignment.CenterVertically,&#10;                modifier = Modifier.weight(1f)&#10;            ) {&#10;                Icon(&#10;                    imageVector = spotDetails.spot.type.icon(),&#10;                    contentDescription = null,&#10;                    tint = MaterialTheme.colorScheme.primary,&#10;                    modifier = Modifier.size(24.dp)&#10;                )&#10;                Spacer(modifier = Modifier.width(8.dp))&#10;                Text(&#10;                    text = spotDetails.spot.type.toDisplayName(),&#10;                    style = MaterialTheme.typography.headlineSmall,&#10;                    color = MaterialTheme.colorScheme.onSurface&#10;                )&#10;            }&#10;&#10;            // Cleanliness chip&#10;            CleanlinessChip(&#10;                cleanliness = spotDetails.spot.cleanliness,&#10;                modifier = Modifier.wrapContentWidth()&#10;            )&#10;        }&#10;&#10;        // Description&#10;        spotDetails.spot.description?.let { description -&gt;&#10;            Spacer(modifier = Modifier.height(12.dp))&#10;&#10;            Text(&#10;                text = description,&#10;                modifier = Modifier.fillMaxWidth().padding(16.dp),&#10;                style = MaterialTheme.typography.bodyMedium,&#10;                color = MaterialTheme.colorScheme.onSurface&#10;            )&#10;        }&#10;&#10;        // Clickable user info&#10;        spotDetails.user?.let { user -&gt;&#10;            PostedByCard(user, onUserProfileClick)&#10;        }&#10;&#10;        Spacer(modifier = Modifier.height(20.dp))&#10;&#10;        // Action buttons&#10;        ActionsButtons(&#10;            onNavigateClick = onNavigateClick,&#10;            onReviewClick = onReviewClick&#10;        )&#10;    }&#10;}&#10;&#10;@Composable&#10;fun PostedByCard(&#10;    user: User,&#10;    onUserProfileClick: () -&gt; Unit,&#10;) {&#10;    Spacer(modifier = Modifier.height(16.dp))&#10;&#10;    Card(&#10;        onClick = onUserProfileClick,&#10;        colors = CardDefaults.cardColors(&#10;            containerColor = MaterialTheme.colorScheme.surfaceContainer&#10;        ),&#10;        modifier = Modifier.fillMaxWidth()&#10;    ) {&#10;        Row(&#10;            verticalAlignment = Alignment.CenterVertically,&#10;            modifier = Modifier.padding(12.dp)&#10;        ) {&#10;            AsyncImage(&#10;                model = user.profilePictureUrl,&#10;                contentDescription = &quot;Profile picture&quot;,&#10;                modifier = Modifier&#10;                    .size(48.dp)&#10;                    .clip(CircleShape),&#10;                contentScale = ContentScale.Crop&#10;            )&#10;            Spacer(modifier = Modifier.width(12.dp))&#10;            Column {&#10;                Text(&#10;                    text = stringResource(R.string.spot_details_posted_by),&#10;                    style = MaterialTheme.typography.labelSmall,&#10;                    color = MaterialTheme.colorScheme.onSurfaceVariant&#10;                )&#10;                Text(&#10;                    text = user.fullName,&#10;                    style = MaterialTheme.typography.bodyMedium,&#10;                    color = MaterialTheme.colorScheme.onSurface&#10;                )&#10;            }&#10;            Spacer(modifier = Modifier.weight(1f))&#10;            Icon(&#10;                imageVector = Icons.AutoMirrored.Filled.ArrowForward,&#10;                contentDescription = null,&#10;                tint = MaterialTheme.colorScheme.onSurfaceVariant,&#10;                modifier = Modifier.size(20.dp)&#10;            )&#10;        }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun ActionsButtons(&#10;    onNavigateClick: () -&gt; Unit,&#10;    onReviewClick: () -&gt; Unit,&#10;) {&#10;    Row(&#10;        horizontalArrangement = Arrangement.spacedBy(12.dp),&#10;        modifier = Modifier.fillMaxWidth()&#10;    ) {&#10;        Button(&#10;            onClick = onNavigateClick,&#10;            modifier = Modifier.weight(1f),&#10;            contentPadding = PaddingValues(vertical = 12.dp)&#10;        ) {&#10;            Icon(&#10;                imageVector = Icons.Default.Navigation,&#10;                contentDescription = null,&#10;                modifier = Modifier.size(18.dp)&#10;            )&#10;            Spacer(modifier = Modifier.width(8.dp))&#10;            Text(text = stringResource(R.string.spot_details_navigate_button))&#10;        }&#10;&#10;        OutlinedButton(&#10;            onClick = onReviewClick,&#10;            modifier = Modifier.weight(1f),&#10;            contentPadding = PaddingValues(vertical = 12.dp)&#10;        ) {&#10;            Icon(&#10;                imageVector = Icons.Outlined.Report,&#10;                contentDescription = null,&#10;                modifier = Modifier.size(18.dp)&#10;            )&#10;            Spacer(modifier = Modifier.width(8.dp))&#10;            Text(text = stringResource(R.string.spot_details_review_button))&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/rs/gospaleks/waterspot/presentation/screens/profile/UserRank.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/rs/gospaleks/waterspot/presentation/screens/profile/UserRank.kt" />
              <option name="updatedContent" value="package rs.gospaleks.waterspot.presentation.screens.profile&#10;&#10;import androidx.compose.material.icons.Icons&#10;import androidx.compose.material.icons.filled.EmojiEvents&#10;import androidx.compose.material.icons.filled.Explore&#10;import androidx.compose.material.icons.filled.Map&#10;import androidx.compose.material.icons.filled.Search&#10;import androidx.compose.material.icons.filled.Star&#10;import androidx.compose.material3.Icon&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.ui.graphics.Color&#10;import androidx.compose.ui.res.stringResource&#10;import rs.gospaleks.waterspot.R&#10;&#10;enum class UserRank(&#10;    val minPoints: Int,&#10;    val maxPoints: Int?,&#10;    val color: Color,&#10;    val icon: @Composable () -&gt; Unit&#10;) {&#10;    Explorer(&#10;        0, 19,&#10;        Color(0xFF42A5F5),&#10;        { Icon(Icons.Filled.Explore, contentDescription = &quot;Explorer&quot;, tint = Color.White) }&#10;    ),&#10;    Contributor(&#10;        20, 59,&#10;        Color(0xFF66BB6A),&#10;        { Icon(Icons.Filled.Star, contentDescription = &quot;Contributor&quot;, tint = Color.White) }&#10;    ),&#10;    Scout(&#10;        60, 99,&#10;        Color(0xFFFFA726),&#10;        { Icon(Icons.Filled.Search, contentDescription = &quot;Scout&quot;, tint = Color.White) }&#10;    ),&#10;    Guide(&#10;        100, 199,&#10;        Color(0xFFAB47BC),&#10;        { Icon(Icons.Filled.Map, contentDescription = &quot;Guide&quot;, tint = Color.White) }&#10;    ),&#10;    WaterGuardian(&#10;        200, null,&#10;        Color(0xFFFFD700),&#10;        { Icon(Icons.Filled.EmojiEvents, contentDescription = &quot;Water Guardian&quot;, tint = Color.White) }&#10;    );&#10;&#10;    companion object {&#10;        fun fromPoints(points: Int): UserRank {&#10;            return entries.first { rank -&gt;&#10;                (points &gt;= rank.minPoints) &amp;&amp; (rank.maxPoints?.let { points &lt;= it } ?: true)&#10;            }&#10;        }&#10;    }&#10;}&#10;&#10;@Composable&#10;fun UserRank.toDisplayName(): String = stringResource(&#10;    when (this) {&#10;        UserRank.Explorer -&gt; R.string.rank_explorer&#10;        UserRank.Contributor -&gt; R.string.rank_contributor&#10;        UserRank.Scout -&gt; R.string.rank_scout&#10;        UserRank.Guide -&gt; R.string.rank_guide&#10;        UserRank.WaterGuardian -&gt; R.string.rank_water_guardian&#10;    }&#10;)&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/rs/gospaleks/waterspot/presentation/screens/profile/edit/EditProfileScreen.kt">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/rs/gospaleks/waterspot/presentation/screens/profile/edit/EditProfileScreen.kt" />
              <option name="originalContent" value="package rs.gospaleks.waterspot.presentation.screens.profile.edit&#10;&#10;import android.widget.Toast&#10;import androidx.compose.foundation.layout.WindowInsets&#10;import androidx.compose.material3.Scaffold&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.runtime.LaunchedEffect&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.platform.LocalContext&#10;import androidx.compose.ui.res.dimensionResource&#10;import androidx.compose.ui.res.stringResource&#10;import androidx.compose.ui.unit.dp&#10;import androidx.hilt.navigation.compose.hiltViewModel&#10;import rs.gospaleks.waterspot.R&#10;import rs.gospaleks.waterspot.presentation.components.BasicTopAppBar&#10;import rs.gospaleks.waterspot.presentation.components.UiEvent&#10;&#10;@Composable&#10;fun EditProfileScreen(&#10;    onBackClick: () -&gt; Unit,&#10;    viewModel: EditProfileViewModel = hiltViewModel()&#10;) {&#10;    val context = LocalContext.current&#10;    val uiState = viewModel.uiState&#10;&#10;    LaunchedEffect(viewModel) {&#10;        viewModel.eventFlow.collect { event -&gt;&#10;            if (event is UiEvent.ShowToast) {&#10;                Toast.makeText(context, event.message, Toast.LENGTH_SHORT).show()&#10;            }&#10;        }&#10;    }&#10;&#10;    Scaffold(&#10;        topBar = {&#10;            BasicTopAppBar(&#10;                title = stringResource(id = R.string.edit_profile_title),&#10;                onBackClick = onBackClick&#10;            )&#10;        },&#10;        contentWindowInsets = WindowInsets(0.dp, 0.dp, 0.dp, dimensionResource(R.dimen.padding_extra_large))&#10;    ) { innerPadding -&gt;&#10;&#10;    }&#10;}" />
              <option name="updatedContent" value="package rs.gospaleks.waterspot.presentation.screens.profile.edit&#10;&#10;import android.widget.Toast&#10;import androidx.compose.foundation.background&#10;import androidx.compose.foundation.layout.*&#10;import androidx.compose.foundation.rememberScrollState&#10;import androidx.compose.foundation.shape.CircleShape&#10;import androidx.compose.foundation.shape.RoundedCornerShape&#10;import androidx.compose.foundation.verticalScroll&#10;import androidx.compose.material.icons.Icons&#10;import androidx.compose.material.icons.filled.Email&#10;import androidx.compose.material.icons.filled.Person&#10;import androidx.compose.material.icons.filled.Phone&#10;import androidx.compose.material3.*&#10;import androidx.compose.runtime.Composable&#10;import androidx.compose.runtime.LaunchedEffect&#10;import androidx.compose.ui.Alignment&#10;import androidx.compose.ui.Modifier&#10;import androidx.compose.ui.platform.LocalContext&#10;import androidx.compose.ui.res.dimensionResource&#10;import androidx.compose.ui.res.stringResource&#10;import androidx.compose.ui.unit.dp&#10;import androidx.hilt.navigation.compose.hiltViewModel&#10;import rs.gospaleks.waterspot.R&#10;import rs.gospaleks.waterspot.presentation.components.BasicTopAppBar&#10;import rs.gospaleks.waterspot.presentation.components.UiEvent&#10;import androidx.compose.foundation.text.KeyboardOptions&#10;&#10;@Composable&#10;fun EditProfileScreen(&#10;    onBackClick: () -&gt; Unit,&#10;    viewModel: EditProfileViewModel = hiltViewModel()&#10;) {&#10;    val context = LocalContext.current&#10;    val uiState = viewModel.uiState&#10;&#10;    LaunchedEffect(viewModel) {&#10;        viewModel.eventFlow.collect { event -&gt;&#10;            if (event is UiEvent.ShowToast) {&#10;                Toast.makeText(context, event.message, Toast.LENGTH_SHORT).show()&#10;            }&#10;        }&#10;    }&#10;&#10;    Scaffold(&#10;        topBar = {&#10;            BasicTopAppBar(&#10;                title = stringResource(id = R.string.edit_profile_title),&#10;                onBackClick = onBackClick&#10;            )&#10;        },&#10;        contentWindowInsets = WindowInsets(0.dp, 0.dp, 0.dp, dimensionResource(R.dimen.padding_extra_large))&#10;    ) { innerPadding -&gt;&#10;        // Treat blank state + loading as initial loading; otherwise use in-button loader&#10;        val initialLoading = uiState.isLoading &amp;&amp;&#10;                uiState.email.isBlank() &amp;&amp;&#10;                uiState.fullName.isBlank() &amp;&amp;&#10;                uiState.phoneNumber.isBlank()&#10;&#10;        if (initialLoading) {&#10;            Box(&#10;                modifier = Modifier&#10;                    .padding(innerPadding)&#10;                    .fillMaxSize(),&#10;                contentAlignment = Alignment.Center&#10;            ) {&#10;                CircularProgressIndicator()&#10;            }&#10;        } else {&#10;            Column(&#10;                modifier = Modifier&#10;                    .padding(innerPadding)&#10;                    .consumeWindowInsets(innerPadding)&#10;                    .padding(horizontal = dimensionResource(R.dimen.padding_extra_large))&#10;                    .fillMaxSize()&#10;                    .verticalScroll(rememberScrollState())&#10;                    .imePadding(),&#10;                horizontalAlignment = Alignment.CenterHorizontally&#10;            ) {&#10;                // Decorative header icon&#10;                Box(&#10;                    modifier = Modifier&#10;                        .size(96.dp)&#10;                        .padding(top = 24.dp)&#10;                        .background(&#10;                            color = MaterialTheme.colorScheme.primary.copy(alpha = 0.08f),&#10;                            shape = CircleShape&#10;                        ),&#10;                    contentAlignment = Alignment.Center&#10;                ) {&#10;                    Icon(&#10;                        imageVector = Icons.Default.Person,&#10;                        contentDescription = stringResource(R.string.edit_profile_header_icon_cd),&#10;                        tint = MaterialTheme.colorScheme.primary,&#10;                        modifier = Modifier.size(40.dp)&#10;                    )&#10;                }&#10;&#10;                Spacer(modifier = Modifier.height(24.dp))&#10;&#10;                // Email (read-only)&#10;                OutlinedTextField(&#10;                    value = uiState.email,&#10;                    onValueChange = {},&#10;                    label = { Text(stringResource(R.string.email_label)) },&#10;                    leadingIcon = { Icon(Icons.Default.Email, contentDescription = null) },&#10;                    modifier = Modifier.fillMaxWidth(),&#10;                    singleLine = true,&#10;                    enabled = false&#10;                )&#10;&#10;                Spacer(modifier = Modifier.height(12.dp))&#10;&#10;                // Full name&#10;                OutlinedTextField(&#10;                    value = uiState.fullName,&#10;                    onValueChange = viewModel::onFullNameChange,&#10;                    label = { Text(stringResource(R.string.full_name_label)) },&#10;                    leadingIcon = { Icon(Icons.Default.Person, contentDescription = null) },&#10;                    modifier = Modifier.fillMaxWidth(),&#10;                    singleLine = true,&#10;                    enabled = !uiState.isLoading&#10;                )&#10;&#10;                Spacer(modifier = Modifier.height(12.dp))&#10;&#10;                // Phone number&#10;                OutlinedTextField(&#10;                    value = uiState.phoneNumber,&#10;                    onValueChange = viewModel::onPhoneNumberChange,&#10;                    label = { Text(stringResource(R.string.phone_number_label)) },&#10;                    leadingIcon = { Icon(Icons.Default.Phone, contentDescription = null) },&#10;                    keyboardOptions = KeyboardOptions(keyboardType = androidx.compose.ui.text.input.KeyboardType.Phone),&#10;                    modifier = Modifier.fillMaxWidth(),&#10;                    singleLine = true,&#10;                    enabled = !uiState.isLoading&#10;                )&#10;&#10;                Spacer(modifier = Modifier.weight(1f))&#10;&#10;                val buttonEnabled = !uiState.isLoading &amp;&amp;&#10;                        uiState.fullName.isNotBlank() &amp;&amp;&#10;                        uiState.phoneNumber.isNotBlank()&#10;&#10;                Button(&#10;                    onClick = { viewModel.onSaveChanges() },&#10;                    modifier = Modifier&#10;                        .fillMaxWidth()&#10;                        .height(52.dp),&#10;                    shape = RoundedCornerShape(28.dp),&#10;                    enabled = buttonEnabled&#10;                ) {&#10;                    if (uiState.isLoading) {&#10;                        CircularProgressIndicator(&#10;                            color = MaterialTheme.colorScheme.onPrimary,&#10;                            strokeWidth = 2.dp,&#10;                            modifier = Modifier.size(20.dp)&#10;                        )&#10;                    } else {&#10;                        Text(&#10;                            text = stringResource(R.string.save),&#10;                            style = MaterialTheme.typography.titleMedium&#10;                        )&#10;                    }&#10;                }&#10;&#10;                Spacer(modifier = Modifier.height(8.dp))&#10;            }&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/strings.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/strings.xml" />
              <option name="originalContent" value="&lt;resources&gt;&#10;    &lt;!-- App name --&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;Water Spot&lt;/string&gt;&#10;&#10;    &lt;!-- Bottom Navigation Labels --&gt;&#10;    &lt;string name=&quot;map_label&quot;&gt;Explore&lt;/string&gt;&#10;    &lt;string name=&quot;all_spots_label&quot;&gt;All Spots&lt;/string&gt;&#10;    &lt;string name=&quot;scoreboard_label&quot;&gt;Ranking&lt;/string&gt;&#10;    &lt;string name=&quot;profile_label&quot;&gt;Profile&lt;/string&gt;&#10;&#10;    &lt;!-- FAB --&gt;&#10;    &lt;string name=&quot;add_spot_fab_content_description&quot;&gt;Add Spot&lt;/string&gt;&#10;&#10;    &lt;!-- Welcome Screen --&gt;&#10;    &lt;string name=&quot;welcome_to&quot;&gt;Welcome to&lt;/string&gt;&#10;    &lt;string name=&quot;welcome_description&quot;&gt;Discover free water sources around you. \n Get involved. Share. Refresh yourself.&lt;/string&gt;&#10;    &lt;string name=&quot;login_button&quot;&gt;Login&lt;/string&gt;&#10;    &lt;string name=&quot;register_button&quot;&gt;Register&lt;/string&gt;&#10;&#10;    &lt;!-- Login Screen --&gt;&#10;    &lt;string name=&quot;login_title&quot;&gt;Login&lt;/string&gt;&#10;    &lt;string name=&quot;login_welcome&quot;&gt;Welcome back!&lt;/string&gt;&#10;    &lt;string name=&quot;login_welcome_description&quot;&gt;Enter your credentials to continue&lt;/string&gt;&#10;    &lt;string name=&quot;forgot_password&quot;&gt;Forgot password?&lt;/string&gt;&#10;&#10;    &lt;!-- Register Screen --&gt;&#10;    &lt;string name=&quot;register_title&quot;&gt;Register&lt;/string&gt;&#10;    &lt;string name=&quot;register_welcome&quot;&gt;Create an account&lt;/string&gt;&#10;    &lt;string name=&quot;register_welcome_description&quot;&gt;Join us to discover and share water spots&lt;/string&gt;&#10;    &lt;string name=&quot;add_photo&quot;&gt;Add profile image&lt;/string&gt;&#10;    &lt;string name=&quot;profile_photo_description&quot;&gt;Profile photo&lt;/string&gt;&#10;    &lt;string name=&quot;full_name_label&quot;&gt;Full Name&lt;/string&gt;&#10;    &lt;string name=&quot;phone_number_label&quot;&gt;Phone Number&lt;/string&gt;&#10;&#10;    &lt;!-- Login/Register Common --&gt;&#10;    &lt;string name=&quot;email_label&quot;&gt;Email&lt;/string&gt;&#10;    &lt;string name=&quot;email_icon_content_description&quot;&gt;Email Icon&lt;/string&gt;&#10;    &lt;string name=&quot;password_label&quot;&gt;Password&lt;/string&gt;&#10;    &lt;string name=&quot;password_icon_content_description&quot;&gt;Password Icon&lt;/string&gt;&#10;    &lt;string name=&quot;toggle_password_visibility&quot;&gt;Tooggle Password Visibility&lt;/string&gt;&#10;&#10;    &lt;!-- Error Messages --&gt;&#10;    &lt;string name=&quot;error_empty_email&quot;&gt;Email field can\'t be empty&lt;/string&gt;&#10;    &lt;string name=&quot;error_invalid_email&quot;&gt;Invalid email address&lt;/string&gt;&#10;    &lt;string name=&quot;error_empty_password&quot;&gt;Password field can\'t be empty&lt;/string&gt;&#10;    &lt;string name=&quot;error_short_password&quot;&gt;Password must be at least 6 characters&lt;/string&gt;&#10;    &lt;string name=&quot;error_weak_password&quot;&gt;Password must contain at least one uppercase letter, one lowercase letter and one digit&lt;/string&gt;&#10;    &lt;string name=&quot;error_empty_full_name&quot;&gt;Full Name field can\'t be empty&lt;/string&gt;&#10;    &lt;string name=&quot;error_empty_phone_number&quot;&gt;Phone Number field can\'t be empty&lt;/string&gt;&#10;    &lt;string name=&quot;error_invalid_phone_number&quot;&gt;Invalid phone number format&lt;/string&gt;&#10;    &lt;string name=&quot;error_login_failed&quot;&gt;Login failed. Please check your credentials and try again.&lt;/string&gt;&#10;    &lt;string name=&quot;error_register_failed&quot;&gt;Registration failed. Please try again.&lt;/string&gt;&#10;&#10;    &lt;!-- Profile Screen --&gt;&#10;    &lt;string name=&quot;account_overview&quot;&gt;Account overview&lt;/string&gt;&#10;    &lt;string name=&quot;edit_profile&quot;&gt;Edit Profile&lt;/string&gt;&#10;    &lt;string name=&quot;my_spots&quot;&gt;My Water Spots&lt;/string&gt;&#10;    &lt;string name=&quot;change_password&quot;&gt;Change Password&lt;/string&gt;&#10;    &lt;string name=&quot;change_language&quot;&gt;Change Language&lt;/string&gt;&#10;    &lt;string name=&quot;theme&quot;&gt;Choose Theme&lt;/string&gt;&#10;    &lt;string name=&quot;theme_light&quot;&gt;Light&lt;/string&gt;&#10;    &lt;string name=&quot;theme_dark&quot;&gt;Dark&lt;/string&gt;&#10;    &lt;string name=&quot;theme_system&quot;&gt;System&lt;/string&gt;&#10;    &lt;string name=&quot;settings&quot;&gt;Settings&lt;/string&gt;&#10;    &lt;string name=&quot;logout&quot;&gt;Logout&lt;/string&gt;&#10;    &lt;string name=&quot;location_tracking&quot;&gt;Location Tracking&lt;/string&gt;&#10;    &lt;string name=&quot;location_tracking_description&quot;&gt;When service is enabled, you will be notified about nearby water spots or users.&lt;/string&gt;&#10;    &lt;string name=&quot;nearby_radius_label&quot;&gt;Nearby radius&lt;/string&gt;&#10;    &lt;string name=&quot;nearby_radius_updated&quot;&gt;Updated to %1$d meters.&lt;/string&gt;&#10;    &lt;string name=&quot;nearby_radius_description&quot;&gt;Larger radius may increase battery usage and deliver more notifications.&lt;/string&gt;&#10;&#10;    &lt;!-- Edit Profile Screen --&gt;&#10;    &lt;string name=&quot;edit_profile_title&quot;&gt;Edit Profile&lt;/string&gt;&#10;&#10;    &lt;!-- Change Password Screen --&gt;&#10;    &lt;string name=&quot;change_password_title&quot;&gt;Change Password&lt;/string&gt;&#10;    &lt;string name=&quot;current_password_label&quot;&gt;Current password&lt;/string&gt;&#10;    &lt;string name=&quot;new_password_label&quot;&gt;New password&lt;/string&gt;&#10;    &lt;string name=&quot;confirm_new_password_label&quot;&gt;Confirm new password&lt;/string&gt;&#10;    &lt;string name=&quot;edit_profile_header_icon_cd&quot;&gt;Edit profile illustration&lt;/string&gt;&#10;&#10;    &lt;!-- Public Profile Screen --&gt;&#10;    &lt;string name=&quot;public_profile_title&quot;&gt;Public Profile&lt;/string&gt;&#10;    &lt;string name=&quot;public_profile_spots_title&quot;&gt;Water spots&lt;/string&gt;&#10;    &lt;string name=&quot;public_profile_no_spots&quot;&gt;No spots added yet.&lt;/string&gt;&#10;    &lt;string name=&quot;public_profile_empty_state&quot;&gt;No profile data.&lt;/string&gt;&#10;&#10;    &lt;!-- Google Maps Screen --&gt;&#10;    &lt;string name=&quot;permission_denied_message&quot;&gt;&quot;Location permission is required.\nPlease enable it in settings.&quot;&lt;/string&gt;&#10;&#10;    &lt;!-- Filters --&gt;&#10;    &lt;string name=&quot;filter_title&quot;&gt;Filters&lt;/string&gt;&#10;    &lt;string name=&quot;filter_radius_label&quot;&gt;Radius:&lt;/string&gt;&#10;    &lt;string name=&quot;cancel_button&quot;&gt;Cancel&lt;/string&gt;&#10;    &lt;string name=&quot;apply_button&quot;&gt;Apply&lt;/string&gt;&#10;&#10;    &lt;!-- Add Spot Screen (step 1) --&gt;&#10;    &lt;string name=&quot;add_spot_title&quot;&gt;Add Spot: Location&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_instructions&quot;&gt;Move the marker to\nthe precise location&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_confirmation&quot;&gt;Confirm Location&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_location_error&quot;&gt;Please Move Closer&lt;/string&gt;&#10;&#10;    &lt;!-- Add Spot Photo Screen (step 2) --&gt;&#10;    &lt;string name=&quot;add_spot_photo_title&quot;&gt;Add Spot: Photo&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_instructions&quot;&gt;Take a photo of water source \nor select one from your gallery.&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_placeholder&quot;&gt;Click to add&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_confirmation&quot;&gt;Use Photo&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_dialog_title&quot;&gt;Add Photo&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_dialog_message&quot;&gt;Please select a photo from your gallery or take a new one.&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_gallery_button&quot;&gt;Gallery&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_camera_button&quot;&gt;Camera&lt;/string&gt;&#10;&#10;    &lt;!-- Add Spot Details Screen (step 3) --&gt;&#10;    &lt;string name=&quot;add_spot_details_title&quot;&gt;Add Spot: Details&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_instructions&quot;&gt;Provide details about\nthe water source.&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_confirmation&quot;&gt;Submit&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_label&quot;&gt;Water Source Type&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_cleanliness_label&quot;&gt;Cleanliness&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_description_label&quot;&gt;Description (optional)&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_description_placeholder&quot;&gt;Describe water sourceâ¦&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_public&quot;&gt;Public Tap&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_fountain&quot;&gt;Fountain&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_well&quot;&gt;Well&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_refill_station&quot;&gt;Refill station&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_spring&quot;&gt;Spring&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_other&quot;&gt;Other&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_cleanliness_clean&quot;&gt;Clean&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_cleanliness_moderate&quot;&gt;Moderate&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_cleanliness_dirty&quot;&gt;Dirty&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_failed&quot;&gt;Failed to add spot. Please try again later.&lt;/string&gt;&#10;&#10;    &lt;!-- Spot Details Bottom Sheet Modal --&gt;&#10;    &lt;string name=&quot;spot_details_description_label&quot;&gt;Description&lt;/string&gt;&#10;    &lt;string name=&quot;spot_details_posted_by&quot;&gt;Posted by&lt;/string&gt;&#10;    &lt;string name=&quot;spot_details_review_button&quot;&gt;Review&lt;/string&gt;&#10;    &lt;string name=&quot;spot_details_navigate_button&quot;&gt;Navigate&lt;/string&gt;&#10;    &lt;string name=&quot;spot_details_add_photo_button&quot;&gt;Add photo&lt;/string&gt;&#10;    &lt;string name=&quot;show_less&quot;&gt;Show less&lt;/string&gt;&#10;    &lt;string name=&quot;read_more&quot;&gt;Read more&lt;/string&gt;&#10;    &lt;string name=&quot;spot_details_no_reviews&quot;&gt;No reviews yet.&lt;/string&gt;&#10;&#10;    &lt;!-- Spot Details Bottom Sheet Modal - Review Dialog --&gt;&#10;    &lt;string name=&quot;review_dialog_title&quot;&gt;Review Spot&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_move_closer&quot;&gt;Move closer to review (distance:&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_rating_label&quot;&gt;Rate this spot&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_comment_label&quot;&gt;Your review&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_comment_placeholder&quot;&gt;Share your thoughts about this spotâ¦&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_submit_button&quot;&gt;Submit Review&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_success_message&quot;&gt;Review submitted successfully!&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_error_message&quot;&gt;Failed to submit review. Please try again later.&lt;/string&gt;&#10;&#10;    &lt;!-- All Spots Screen --&gt;&#10;    &lt;string name=&quot;all_spots_empty_message&quot;&gt;No water spots found.&lt;/string&gt;&#10;&#10;    &lt;!-- Ranks --&gt;&#10;    &lt;string name=&quot;rank_explorer&quot;&gt;Explorer&lt;/string&gt;&#10;    &lt;string name=&quot;rank_contributor&quot;&gt;Contributor&lt;/string&gt;&#10;    &lt;string name=&quot;rank_scout&quot;&gt;Scout&lt;/string&gt;&#10;    &lt;string name=&quot;rank_guide&quot;&gt;Guide&lt;/string&gt;&#10;    &lt;string name=&quot;rank_water_guardian&quot;&gt;Water Guardian&lt;/string&gt;&#10;&#10;    &lt;string name=&quot;location_permission_error&quot;&gt;Location permission error&lt;/string&gt;&#10;&#10;    &lt;string name=&quot;back_button_content_description&quot;&gt;Back&lt;/string&gt;&#10;&lt;/resources&gt;" />
              <option name="updatedContent" value="&lt;resources&gt;&#10;    &lt;!-- App name --&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;Water Spot&lt;/string&gt;&#10;&#10;    &lt;!-- Bottom Navigation Labels --&gt;&#10;    &lt;string name=&quot;map_label&quot;&gt;Explore&lt;/string&gt;&#10;    &lt;string name=&quot;all_spots_label&quot;&gt;All Spots&lt;/string&gt;&#10;    &lt;string name=&quot;scoreboard_label&quot;&gt;Ranking&lt;/string&gt;&#10;    &lt;string name=&quot;profile_label&quot;&gt;Profile&lt;/string&gt;&#10;&#10;    &lt;!-- FAB --&gt;&#10;    &lt;string name=&quot;add_spot_fab_content_description&quot;&gt;Add Spot&lt;/string&gt;&#10;&#10;    &lt;!-- Welcome Screen --&gt;&#10;    &lt;string name=&quot;welcome_to&quot;&gt;Welcome to&lt;/string&gt;&#10;    &lt;string name=&quot;welcome_description&quot;&gt;Discover free water sources around you. \n Get involved. Share. Refresh yourself.&lt;/string&gt;&#10;    &lt;string name=&quot;login_button&quot;&gt;Login&lt;/string&gt;&#10;    &lt;string name=&quot;register_button&quot;&gt;Register&lt;/string&gt;&#10;&#10;    &lt;!-- Login Screen --&gt;&#10;    &lt;string name=&quot;login_title&quot;&gt;Login&lt;/string&gt;&#10;    &lt;string name=&quot;login_welcome&quot;&gt;Welcome back!&lt;/string&gt;&#10;    &lt;string name=&quot;login_welcome_description&quot;&gt;Enter your credentials to continue&lt;/string&gt;&#10;    &lt;string name=&quot;forgot_password&quot;&gt;Forgot password?&lt;/string&gt;&#10;&#10;    &lt;!-- Register Screen --&gt;&#10;    &lt;string name=&quot;register_title&quot;&gt;Register&lt;/string&gt;&#10;    &lt;string name=&quot;register_welcome&quot;&gt;Create an account&lt;/string&gt;&#10;    &lt;string name=&quot;register_welcome_description&quot;&gt;Join us to discover and share water spots&lt;/string&gt;&#10;    &lt;string name=&quot;add_photo&quot;&gt;Add profile image&lt;/string&gt;&#10;    &lt;string name=&quot;profile_photo_description&quot;&gt;Profile photo&lt;/string&gt;&#10;    &lt;string name=&quot;full_name_label&quot;&gt;Full Name&lt;/string&gt;&#10;    &lt;string name=&quot;phone_number_label&quot;&gt;Phone Number&lt;/string&gt;&#10;&#10;    &lt;!-- Login/Register Common --&gt;&#10;    &lt;string name=&quot;email_label&quot;&gt;Email&lt;/string&gt;&#10;    &lt;string name=&quot;email_icon_content_description&quot;&gt;Email Icon&lt;/string&gt;&#10;    &lt;string name=&quot;password_label&quot;&gt;Password&lt;/string&gt;&#10;    &lt;string name=&quot;password_icon_content_description&quot;&gt;Password Icon&lt;/string&gt;&#10;    &lt;string name=&quot;toggle_password_visibility&quot;&gt;Tooggle Password Visibility&lt;/string&gt;&#10;&#10;    &lt;!-- Error Messages --&gt;&#10;    &lt;string name=&quot;error_empty_email&quot;&gt;Email field can\'t be empty&lt;/string&gt;&#10;    &lt;string name=&quot;error_invalid_email&quot;&gt;Invalid email address&lt;/string&gt;&#10;    &lt;string name=&quot;error_empty_password&quot;&gt;Password field can\'t be empty&lt;/string&gt;&#10;    &lt;string name=&quot;error_short_password&quot;&gt;Password must be at least 6 characters&lt;/string&gt;&#10;    &lt;string name=&quot;error_weak_password&quot;&gt;Password must contain at least one uppercase letter, one lowercase letter and one digit&lt;/string&gt;&#10;    &lt;string name=&quot;error_empty_full_name&quot;&gt;Full Name field can\'t be empty&lt;/string&gt;&#10;    &lt;string name=&quot;error_empty_phone_number&quot;&gt;Phone Number field can\'t be empty&lt;/string&gt;&#10;    &lt;string name=&quot;error_invalid_phone_number&quot;&gt;Invalid phone number format&lt;/string&gt;&#10;    &lt;string name=&quot;error_login_failed&quot;&gt;Login failed. Please check your credentials and try again.&lt;/string&gt;&#10;    &lt;string name=&quot;error_register_failed&quot;&gt;Registration failed. Please try again.&lt;/string&gt;&#10;&#10;    &lt;!-- Profile Screen --&gt;&#10;    &lt;string name=&quot;account_overview&quot;&gt;Account overview&lt;/string&gt;&#10;    &lt;string name=&quot;edit_profile&quot;&gt;Edit Profile&lt;/string&gt;&#10;    &lt;string name=&quot;my_spots&quot;&gt;My Water Spots&lt;/string&gt;&#10;    &lt;string name=&quot;change_password&quot;&gt;Change Password&lt;/string&gt;&#10;    &lt;string name=&quot;change_language&quot;&gt;Change Language&lt;/string&gt;&#10;    &lt;string name=&quot;theme&quot;&gt;Choose Theme&lt;/string&gt;&#10;    &lt;string name=&quot;theme_light&quot;&gt;Light&lt;/string&gt;&#10;    &lt;string name=&quot;theme_dark&quot;&gt;Dark&lt;/string&gt;&#10;    &lt;string name=&quot;theme_system&quot;&gt;System&lt;/string&gt;&#10;    &lt;string name=&quot;settings&quot;&gt;Settings&lt;/string&gt;&#10;    &lt;string name=&quot;logout&quot;&gt;Logout&lt;/string&gt;&#10;    &lt;string name=&quot;location_tracking&quot;&gt;Location Tracking&lt;/string&gt;&#10;    &lt;string name=&quot;location_tracking_description&quot;&gt;When service is enabled, you will be notified about nearby water spots or users.&lt;/string&gt;&#10;    &lt;string name=&quot;nearby_radius_label&quot;&gt;Nearby radius&lt;/string&gt;&#10;    &lt;string name=&quot;nearby_radius_updated&quot;&gt;Updated to %1$d meters.&lt;/string&gt;&#10;    &lt;string name=&quot;nearby_radius_description&quot;&gt;Larger radius may increase battery usage and deliver more notifications.&lt;/string&gt;&#10;&#10;    &lt;!-- Edit Profile Screen --&gt;&#10;    &lt;string name=&quot;edit_profile_title&quot;&gt;Edit Profile&lt;/string&gt;&#10;    &lt;string name=&quot;save&quot;&gt;Save&lt;/string&gt;&#10;&#10;    &lt;!-- Change Password Screen --&gt;&#10;    &lt;string name=&quot;change_password_title&quot;&gt;Change Password&lt;/string&gt;&#10;    &lt;string name=&quot;current_password_label&quot;&gt;Current password&lt;/string&gt;&#10;    &lt;string name=&quot;new_password_label&quot;&gt;New password&lt;/string&gt;&#10;    &lt;string name=&quot;confirm_new_password_label&quot;&gt;Confirm new password&lt;/string&gt;&#10;    &lt;string name=&quot;edit_profile_header_icon_cd&quot;&gt;Edit profile illustration&lt;/string&gt;&#10;&#10;    &lt;!-- Public Profile Screen --&gt;&#10;    &lt;string name=&quot;public_profile_title&quot;&gt;Public Profile&lt;/string&gt;&#10;    &lt;string name=&quot;public_profile_spots_title&quot;&gt;Water spots&lt;/string&gt;&#10;    &lt;string name=&quot;public_profile_no_spots&quot;&gt;No spots added yet.&lt;/string&gt;&#10;    &lt;string name=&quot;public_profile_empty_state&quot;&gt;No profile data.&lt;/string&gt;&#10;&#10;    &lt;!-- Google Maps Screen --&gt;&#10;    &lt;string name=&quot;permission_denied_message&quot;&gt;&quot;Location permission is required.\nPlease enable it in settings.&quot;&lt;/string&gt;&#10;&#10;    &lt;!-- Filters --&gt;&#10;    &lt;string name=&quot;filter_title&quot;&gt;Filters&lt;/string&gt;&#10;    &lt;string name=&quot;filter_radius_label&quot;&gt;Radius:&lt;/string&gt;&#10;    &lt;string name=&quot;cancel_button&quot;&gt;Cancel&lt;/string&gt;&#10;    &lt;string name=&quot;apply_button&quot;&gt;Apply&lt;/string&gt;&#10;&#10;    &lt;!-- Add Spot Screen (step 1) --&gt;&#10;    &lt;string name=&quot;add_spot_title&quot;&gt;Add Spot: Location&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_instructions&quot;&gt;Move the marker to\nthe precise location&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_confirmation&quot;&gt;Confirm Location&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_location_error&quot;&gt;Please Move Closer&lt;/string&gt;&#10;&#10;    &lt;!-- Add Spot Photo Screen (step 2) --&gt;&#10;    &lt;string name=&quot;add_spot_photo_title&quot;&gt;Add Spot: Photo&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_instructions&quot;&gt;Take a photo of water source \nor select one from your gallery.&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_placeholder&quot;&gt;Click to add&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_confirmation&quot;&gt;Use Photo&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_dialog_title&quot;&gt;Add Photo&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_dialog_message&quot;&gt;Please select a photo from your gallery or take a new one.&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_gallery_button&quot;&gt;Gallery&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_photo_camera_button&quot;&gt;Camera&lt;/string&gt;&#10;&#10;    &lt;!-- Add Spot Details Screen (step 3) --&gt;&#10;    &lt;string name=&quot;add_spot_details_title&quot;&gt;Add Spot: Details&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_instructions&quot;&gt;Provide details about\nthe water source.&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_confirmation&quot;&gt;Submit&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_label&quot;&gt;Water Source Type&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_cleanliness_label&quot;&gt;Cleanliness&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_description_label&quot;&gt;Description (optional)&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_description_placeholder&quot;&gt;Describe water sourceâ¦&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_public&quot;&gt;Public Tap&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_fountain&quot;&gt;Fountain&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_well&quot;&gt;Well&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_refill_station&quot;&gt;Refill station&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_spring&quot;&gt;Spring&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_type_other&quot;&gt;Other&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_cleanliness_clean&quot;&gt;Clean&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_cleanliness_moderate&quot;&gt;Moderate&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_details_cleanliness_dirty&quot;&gt;Dirty&lt;/string&gt;&#10;    &lt;string name=&quot;add_spot_failed&quot;&gt;Failed to add spot. Please try again later.&lt;/string&gt;&#10;&#10;    &lt;!-- Spot Details Bottom Sheet Modal --&gt;&#10;    &lt;string name=&quot;spot_details_description_label&quot;&gt;Description&lt;/string&gt;&#10;    &lt;string name=&quot;spot_details_posted_by&quot;&gt;Posted by&lt;/string&gt;&#10;    &lt;string name=&quot;spot_details_review_button&quot;&gt;Review&lt;/string&gt;&#10;    &lt;string name=&quot;spot_details_navigate_button&quot;&gt;Navigate&lt;/string&gt;&#10;    &lt;string name=&quot;spot_details_add_photo_button&quot;&gt;Add photo&lt;/string&gt;&#10;    &lt;string name=&quot;show_less&quot;&gt;Show less&lt;/string&gt;&#10;    &lt;string name=&quot;read_more&quot;&gt;Read more&lt;/string&gt;&#10;    &lt;string name=&quot;spot_details_no_reviews&quot;&gt;No reviews yet.&lt;/string&gt;&#10;&#10;    &lt;!-- Spot Details Bottom Sheet Modal - Review Dialog --&gt;&#10;    &lt;string name=&quot;review_dialog_title&quot;&gt;Review Spot&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_move_closer&quot;&gt;Move closer to review (distance:&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_rating_label&quot;&gt;Rate this spot&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_comment_label&quot;&gt;Your review&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_comment_placeholder&quot;&gt;Share your thoughts about this spotâ¦&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_submit_button&quot;&gt;Submit Review&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_success_message&quot;&gt;Review submitted successfully!&lt;/string&gt;&#10;    &lt;string name=&quot;review_dialog_error_message&quot;&gt;Failed to submit review. Please try again later.&lt;/string&gt;&#10;&#10;    &lt;!-- All Spots Screen --&gt;&#10;    &lt;string name=&quot;all_spots_empty_message&quot;&gt;No water spots found.&lt;/string&gt;&#10;&#10;    &lt;!-- Ranks --&gt;&#10;    &lt;string name=&quot;rank_explorer&quot;&gt;Explorer&lt;/string&gt;&#10;    &lt;string name=&quot;rank_contributor&quot;&gt;Contributor&lt;/string&gt;&#10;    &lt;string name=&quot;rank_scout&quot;&gt;Scout&lt;/string&gt;&#10;    &lt;string name=&quot;rank_guide&quot;&gt;Guide&lt;/string&gt;&#10;    &lt;string name=&quot;rank_water_guardian&quot;&gt;Water Guardian&lt;/string&gt;&#10;&#10;    &lt;string name=&quot;location_permission_error&quot;&gt;Location permission error&lt;/string&gt;&#10;&#10;    &lt;string name=&quot;back_button_content_description&quot;&gt;Back&lt;/string&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>